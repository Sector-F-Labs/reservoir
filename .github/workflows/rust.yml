name: Rust

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

env:
  CARGO_TERM_COLOR: always

jobs:
  build:

    runs-on: ubuntu-latest

    services:
      neo4j:
        image: neo4j:latest
        ports:
          - "7474:7474"
          - "7687:7687"
        env:
          NEO4J_AUTH: neo4j/password
          NEO4J_dbms_security_procedures_unrestricted: "gds.*,apoc.*,vectorization.*"
          NEO4J_dbms_security_procedures_allowlist: "gds.*,apoc.*,vectorization.*"
          NEO4J_server_memory_heap_initial__size: "512m"
          NEO4J_server_memory_heap_max__size: "1G"
          NEO4J_server_memory_pagecache_size: "1G"
        options: >-
          --health-cmd "wget -O /dev/null -q http://localhost:7474 || exit 1"
          --health-interval 1m
          --health-timeout 10s
          --health-retries 3
          --health-start-period 40s

    steps:
    - uses: actions/checkout@v4
    
    - name: Cache dependencies
      uses: actions/cache@v3
      with:
        path: |
          ~/.cargo
          target/
        key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}
        restore-keys: ${{ runner.os }}-cargo-
    
    - name: Build
      run: cargo build --verbose
      
    - name: Wait for Neo4j to be ready
      run: |
        echo "Waiting for Neo4j to start..."
        timeout 60s bash -c 'until curl -s http://localhost:7474 > /dev/null; do sleep 1; done'
        echo "Neo4j is up and running"
        
    - name: Run tests
      run: cargo test --verbose
      env:
        NEO4J_URI: "bolt://localhost:7687"
        NEO4J_USER: "neo4j"
        NEO4J_PASSWORD: "password"
